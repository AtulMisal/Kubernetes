
SSL Termination :
      1. To run our website on secure side (HTTPS) we need some certificate & to get that we use SSL Termination.
      2. Need to install a cert-manager
      3. kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.7.1/cert-manager.yaml
      4. A namespace should be created cert-manager.
      5. To create an ssl certificate we have to create issuers & clusterissuers for staging and prod.
      6. Issuers & ClusterIssuers are the K8S resources that represents certificate autorities that are able to 
	        generate signed certificates.	
      7. Create the yml files as in github repo for staging & prod add necessory annotations.
      8. Edit the ingress file according to condition and check on browser the site will run on HTTPS protocol.

-------------------------------------------------------------------------------------------------------------------------------------

# staging_issuer.yml

apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
 name: letsencrypt-staging
 namespace: cert-manager
spec:
 acme:
   # The ACME server URL
   server: https://acme-staging-v02.api.letsencrypt.org/directory
   # Email address used for ACME registration
   email: user@gmail.com
   # Name of a secret used to store the ACME account private key
   privateKeySecretRef:
     name: letsencrypt-staging             
     # A secret is generated by above code.
   # Enable the HTTP-01 challenge provider
   solvers:
   - http01:
       ingress:
         class:  nginx   # Ingress controller name


----------------------------------------------------------------------------------------------------------------------------------


# prod_issuer.yml

apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  namespace: cert-manager
spec:
  acme:
    # The ACME server URL
    server: https://acme-v02.api.letsencrypt.org/directory
    # Email address used for ACME registration
    email: user@gmail.com
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-prod
    # Enable the HTTP-01 challenge provider
    solvers:
    - http01:
        ingress:
          class: nginx         

-------------------------------------------------------------------------------------------------------------------------------------

# According to above file edit the ingress.yml file as :

# Ingress.yml

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata: 
   name: my-ingress1
   labels:
     name: my-ingress1
   annotations:
     cert-manager.io/cluster-issuer: "letsencrypt-prod" # Change the issuer here
     kubernetes.io/ingress.class: "nginx"  
spec:
  tls:
    - hosts: 
        - "Example.devopspro.in"  # Your host name
        - ""                      # Provide all hosts in array
      secretName: my-secret          # With this name a secret will be created automatically    

# We can combine ssl & Host/Path files like this 


-----------------------------------------------------------------------------------------------------------------------------------
